{
    "contents" : "\nquery.rand  <- \"select mem_id, description, amount, transaction_category as category, optimized_transaction_date as date from yi_base_views.bank_panel where\nmem_id in (select distinct mem_id from yi_base_views.bank_panel order by random() limit 10) and transaction_date > '2014-09-01' order by 1\"\n\nquery.fix  <- \"select mem_id, transaction_id, description, amount, transaction_category as category, optimized_transaction_date as date from yi_base_views.bank_panel where\nmem_id in (1000164415352201, 1000564012973460, 1000564013171293, 1000564013502219, 1000564014242573, 1000616412894541, 1000564012609530, 1000564013137781, 1000564014123899, 1000564014583825, 1000616410283476) and transaction_date > '2014-09-01' order by 1\"\n\nquery <- \"select description, amount, transaction_category as category, optimized_transaction_date as date from yi_base_views.bank_panel where mem_id=1000616410222094 and transaction_date > '2014-08-01'\"\n\nDATE_FORMAT <- \"%d/%m/%Y\"\nxyz <- function(X) {\n  print(X[, c('UNIQUE.MEM.ID', 'DESCRIPTION')])\n}\n\nfind_similar  <- function(X){\n  X <- X %>% mutate(flag=0)\n  #X$flag  <- rep(0, nrow(X))\n  data.sim <- data.frame(matrix(ncol=11, nrow=0))\n  names(data.sim) <- c('mem', 'transaction_id', 'similar_transactions', 'desc', 'date_diff', 'date_var', 'amt', 'cat', 'discret', 'sub', 'label')\n  for(i in 1:nrow(X)) {\n    if(X[i, 'flag'] == 1) next\n    cond_match <- sim(X$DESCRIPTION[i], X$DESCRIPTION) <= 2\n    X[cond_match, 'flag'] <- 1\n    temp <- X[cond_match, ] %>%\n      group_by(TRANSACTION.TYPE) %>%\n      filter(n() >= 2) %>%\n      do(feature_vector(.))\n    data.sim <- rbind(data.sim, temp[, -1])        \n  }\n  return (data.sim)\n}\n\nstrprocess <- function(x) {\n  x <- gsub(\"[^[:alpha:]]\", \"\", x)\n  x <- gsub(\"X\", \"\", x)\n  return (tolower(x))\n}\n\nsim <- function(x, y){\n  x <- strprocess(x)\n  y <- strprocess(y)\n  return (adist(x, y))\n}\n\ndate_diff <- function(x, y){\n  return (difftime(strptime(x, format=\"%d/%m/%Y\"), strptime(y, format=\"%d/%m/%Y\"), units=\"weeks\"))\n  #  return (difftime(strptime(x, format=\"%d-%m-%Y\"), strptime(y, format=\"%d-%m-%Y\"), units=\"weeks\"))\n}\n\nMode<-function(x){ux<-unique(x); ux[which.max(tabulate(match(x,ux)))]};\n\nload_data <- function(file) {\n  x <- read.table(file, numerals=\"no.loss\", sep=\"|\", quote=\"\", comment.char=\"\", header = T, stringsAsFactors=F)\n  x$UNIQUE.MEM.ID <- rep(1, nrow(x))\n  x$UNIQUE.TRANSACTION.ID <- seq.int(1, nrow(x))\n  return(x)\n}\n\nfilter_similar <- function(x) {\n  sim <- do.call(\"rbind\", lapply(split(x, x$UNIQUE.MEM.ID), find_similar))\n  sim[is.na(sim)] <- -1\n  sim[, 'date_diff'] <- gsub(\" weeks\", \"\", sim[, 'date_diff'])\n  return(sim)\n}\n\nbuild_model <- function() {\n  cats  <<- read.csv('categories.txt', header=T)\n  cats.disc <<- cats[cats$DISCRETIONARY==1, 'TRANSACTION.CATEGORY']\n  patterns <<- read.csv('subscription.txt', header=F)\n  \n  data  <- read.csv('app_train1.csv', header=T)\n  data[is.na(data)]   <- -1\n  m <- PART(label ~ date_diff+date_var+amt+cat+discret+sub, data=data)\n}\n\nfeature_vector <- function(x) {\n  #  x %>% arrange(as.Date(OMPTIMIZED.TRANSACTION.DATE, format=DATE_FORMAT)) %>%\n  #    mutate(diff.date=date_diff(OMPTIMIZED.TRANSACTION.DATE, lag(OMPTIMIZED.TRANSACTION.DATE))) %>%\n  #    group_by(UNIQUE.MEM.ID) %>%\n  #    summarize(similar_transactions=paste(UNIQUE.TRANSACTION.ID, collapse=\"|\"), desc=strprocess(DESCRIPTION[1]), \n  #             date_diff=round(mean(diff.date, na.rm=T), digits = 2), date_var=round(var(diff.date, na.rm=T), digits = 2),\n  #              amt=round(var(AMOUNT) / mean(AMOUNT), digits = 2), cat=Mode(TRANSACTION.CATEGORY), discret=Mode(TRANSACTION.CATEGORY) %in% cats.disc, \n  #              sub=Reduce('|', lapply(patterns$V1, grepl, strprocess(DESCRIPTION[1]))))\n  \n  order.date      <- order(as.Date(x$OMPTIMIZED.TRANSACTION.DATE, format=DATE_FORMAT))\n  x               <- x[order.date, ]\n  diff.date       <- date_diff(tail(x$OMPTIMIZED.TRANSACTION.DATE, -1), head(x$OMPTIMIZED.TRANSACTION.DATE, -1))\n  diff.date.avg   <- round(mean(diff.date), digits = 2)\n  diff.date.var   <- round(var(diff.date), digits = 2)\n  amt.var_to_mean <- round(var(x$AMOUNT) / mean(x$AMOUNT), digits = 2)\n  trans.cat       <- Mode(x$TRANSACTION.CATEGORY)\n  trans.cat.d     <- trans.cat %in% cats.disc\n  trans.desc      <- strprocess(x$DESCRIPTION[1])\n  trans.sub       <- Reduce('|', lapply(patterns$V1, grepl, trans.desc))\n  data.features   <- data.frame(mem=x$UNIQUE.MEM.ID[1], transaction_id=x$UNIQUE.TRANSACTION.ID[1], \n                                similar_transactions=paste(x$UNIQUE.TRANSACTION.ID[-1], collapse=\"|\"), desc=trans.desc, \n                                date_diff=diff.date.avg, date_var=diff.date.var, amt=amt.var_to_mean, cat=trans.cat, \n                                discret=trans.cat.d, sub=trans.sub, label=Mode(x$RECURRING))\n  return(data.features)\n}\n\nprocess_write <- function(x, file){\n  # data.train <- feature_vector(x)\n  write.table(x, file=file, append=T, row.names=F, col.names=F,  sep=\",\")\n}\n\ntrans_predict <- function(m, x) {\n  x$pred <- predict(m, x)\n  x$pred[which(x$DISCRETIONARY=='TRUE' | x$TRANSACTION.CATEGORY=='Credit Card Payments')] <- 'Invalid'\n  x$pred[which(x$TRANSACTION.CATEGORY=='Paychecks/Salary' | x$TRANSACTION.CATEGORY=='Other Income' | x$SUBSCRIPTION=='TRUE')] <- 'Valid'\n  return (x)\n}\n\nbuild_result <- function(raw, processed) {\n  result <- processed[processed$pred=='Valid', c(F, T, T, F, F, F, F, T, F, T, F)]\n  result <- merge(result, raw[, c('UNIQUE.TRANSACTION.ID', 'DESCRIPTION', 'AMOUNT')], by='UNIQUE.TRANSACTION.ID')\n  #result <- cbind(result, raw[result$UNIQUE.TRANSACTION.ID==raw$UNIQUE.TRANSACTION.ID, c('AMOUNT', 'DESCRIPTION')])\n  colnames(result) <- c('Transation ID', 'Similar Transactions', 'TRANSACTION.CATEGORY', 'Subscription', 'DESCRIPTION', 'AMOUNT')\n  rownames(result) <- NULL\n  return(result)\n}",
    "created" : 1437024778416.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1448166666",
    "id" : "72C54C6B",
    "lastKnownWriteTime" : 1437052348,
    "path" : "C:/Users/akulkarni/RWorkspace/recurring-changes/app_util.R",
    "project_path" : "app_util.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}