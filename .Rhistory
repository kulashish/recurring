?read.csv
trans     <- read.csv('Top-100-Users-Trans-v4.csv', head=TRUE, sep='|', colClasses = c(rep('character', 2)))
trans     <- read.csv('Top-100-Users-Trans-v4.csv', head=TRUE, sep='|')
trans     <- read.csv('Top-100-Users-Trans-v4.csv', head=TRUE, sep='|', colClasses = c(UNIQUE.MEM.ID='character', UNIQUE.TRANSACTION.ID='character')
trans     <- read.csv('Top-100-Users-Trans-v4.csv', head=TRUE, sep='|', colClasses = c(UNIQUE.MEM.ID='character', UNIQUE.TRANSACTION.ID='character'))
trans     <- read.csv('Top-100-Users-Trans-v4.csv', head=TRUE, sep='|', colClasses = c(UNIQUE.MEM.ID='character', UNIQUE.TRANSACTION.ID='character'))
trans     <- read.csv('Top-100-Users-Trans-v4.csv', head=TRUE, sep='|', colClasses = c(UNIQUE.MEM.ID='character', UNIQUE.TRANSACTION.ID='character'), stringsAsFactors=F)
source('app_util.R')
library(rpart)
library(RWeka)
cats      <<- read.csv('categories.txt', header=T)
cats.disc <<- cats[cats$discretionary==1, 'category']
patterns  <<- read.csv('subscription.txt', header=F)
trans     <- read.csv('subset.csv', head=TRUE, sep='|', colClasses = c(UNIQUE.MEM.ID='character', UNIQUE.TRANSACTION.ID='character'), stringsAsFactors=F)
data.sim_df <- do.call("rbind", lapply(split(trans, trans$UNIQUE.MEM.ID), find_similar))
process_write(data.sim_df, 'trans_features.csv')
process_write(data.sim_df, 'trans_features1.csv')
?split
library(dplyr)
trans %>%
group_by(UNIQUE.MEM.ID)
?adist
l <- c("cat", "bat", "rat", "tab", "flab")
adist(mat(l))
?mat
?matrix
as.matrix(l)
as.matrix(l, nrow=length(l), ncol=length(l)
)
adist(l)
adist(l) <= 2
(adist(l) <= 2)[1]
(adist(l) <= 2)[1,]
adist(l)[which(adist(l) <= 2)]
adist(l)[1, which(adist(l) <= 2)]
adist(l)[1, which(adist(l)[1,] <= 2)]
adist(l)[0,0]
adist(l)[1,1]
which(adist(l)[1,] <= 2)
which(adist(l) <= 2)
source('app_util_new.R')
library(rpart)
library(RWeka)
library(dplyr)
trans     <- read.csv('subset.csv', head=TRUE, sep='|', colClasses = c(UNIQUE.MEM.ID='character', UNIQUE.TRANSACTION.ID='character'), stringsAsFactors=F)
trans.groups <- trans %>% group_by(UNIQUE.MEM.ID)
data.sim_df <- do.call("rbind", lapply(trans.groups, find_similar))
nrow(trans.groups)
nrow(trans)
?ddply
library(plyr)
?ddply
trans     <- read.csv('subset.csv', head=TRUE, sep='|', colClasses = c(UNIQUE.MEM.ID='character', UNIQUE.TRANSACTION.ID='character'), stringsAsFactors=F)
data.sim_df <- ddply(trans, ~ UNIQUE.MEM.ID, find_similar)
data.sim_df <- ddply(trans, .(UNIQUE.MEM.ID), find_similar)
data.sim_df <- ddply(trans, .(UNIQUE.MEM.ID), print)
source('app_util_new.R')
data.sim_df <- ddply(trans, .(UNIQUE.MEM.ID), xyz)
source('app_util_new.R')
data.sim_df <- ddply(trans, .(UNIQUE.MEM.ID), xyz)
source('app_util_new.R')
data.sim_df <- ddply(trans, .(UNIQUE.MEM.ID), find_similar)
source('app_util_new.R')
data.sim_df <- ddply(trans, .(UNIQUE.MEM.ID), find_similar)
source('app_util_new.R')
data.sim_df <- ddply(trans, .(UNIQUE.MEM.ID), find_similar)
?data.frame
source('app_util_new.R')
data.sim_df <- ddply(trans, .(UNIQUE.MEM.ID), find_similar)
process_write(data.sim_df, 'trans_features2.csv')
?ddply
source('app_util_new.R')
data.sim_df <- ddply(trans, .(UNIQUE.MEM.ID), find_similar)
process_write(data.sim_df, 'trans_features2.csv')
trans     <- read.csv('subset.csv', head=TRUE, sep='|', colClasses = c(UNIQUE.MEM.ID='character', UNIQUE.TRANSACTION.ID='character'), stringsAsFactors=F)
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
source('app_util_new.R')
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
source('app_util_new.R')
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
source('app_util_new.R')
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
source('app_util_new.R')
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
source('app_util_new.R')
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
source('app_util_new.R')
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
source('app_util_new.R')
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
source('app_util_new.R')
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
process_write(data.sim_df, 'trans_features2.csv')
source('app_util_new.R')
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
process_write(data.sim_df[, -1], 'trans_features2.csv')
source('app_util_new.R')
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
source('app_util_new.R')
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
source('app_util_new.R')
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
source('app_util_new.R')
library(rpart)
library(RWeka)
library(dplyr)
library(plyr)
cats      <<- read.csv('categories.txt', header=T)
cats.disc <<- cats[cats$discretionary==1, 'category']
patterns  <<- read.csv('subscription.txt', header=F)
trans     <- read.csv('subset.csv', head=TRUE, sep='|', colClasses = c(UNIQUE.MEM.ID='character', UNIQUE.TRANSACTION.ID='character'), stringsAsFactors=F)
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
source('app_util_new.R')
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
data.sim_df <- ddply(trans, .(UNIQUE.MEM.ID), find_similar)
process_write(data.sim_df[, -1], 'trans_features2.csv')
process_write(data.sim_df[, -1], 'trans_features2.csv')
source('app_util_new.R')
data.sim_df <- ddply(trans, .(UNIQUE.MEM.ID), find_similar)
?do
source('app_util_new.R')
data.sim_df <- ddply(trans, .(UNIQUE.MEM.ID), find_similar)
trans     <- read.csv('Top-100-Users-Trans-v4.csv', head=TRUE, sep='|', colClasses = c(UNIQUE.MEM.ID='character', UNIQUE.TRANSACTION.ID='character'), stringsAsFactors=F)
data.sim_df <- ddply(trans, .(UNIQUE.MEM.ID), find_similar)
warnings()
process_write(data.sim_df[, -1], 'trans_features_full.csv')
trans.idf <- idata.frame(trans)
system.time(data.sim_df <- ddply(trans.idf, .(UNIQUE.MEM.ID), find_similar))
system.time(data.sim_df <- ddply(trans.idf, "UNIQUE.MEM.ID", find_similar))
system.time(data.sim_df <- ddply(trans.idf, c("UNIQUE.MEM.ID"), find_similar))
?idata
?idata.frame
library(plyr)
trans     <- read.csv('Top-100-Users-Trans-v4.csv', head=TRUE, sep='|', colClasses = c(UNIQUE.MEM.ID='character', UNIQUE.TRANSACTION.ID='character'), stringsAsFactors=F)
trans.idf <- idata.frame(trans)
system.time(data.sim_df <- ddply(trans.idf, c("UNIQUE.MEM.ID"), find_similar))
data.sim_df <- ddply(trans.idf, c("UNIQUE.MEM.ID"), find_similar)
data.sim_df <- ddply(trans.idf, "UNIQUE.MEM.ID", find_similar)
system.time(trans %>% group_by(UNIQUE.MEM.ID))
system.time(data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.)))
system.time(data.sim_df <- idata.frame(trans) %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.)))
system.time(data.sim_df <- ddply(idata.frame(trans), "UNIQUE.MEM.ID", find_similar))
?tapply
?lag
c('14/05/2015', '27/04/2015', '10/05/2015')
dates.strc('14/05/2015', '27/04/2015', '10/05/2015')
dates.str <- c('14/05/2015', '27/04/2015', '10/05/2015')
dates.dt <- as.Date(dates.str)
lag(dates.dt)
dates.dt <- as.Date(dates.str, format=DATE_FORMAT)
lag(dates.dt)
dates.dt - lag(dates.dt)
arrange(dates.dt)
?arange
?arrange
?date_diff
df <- data.frame(name=c("ash", "kash", "bash"), dt=dates.str)
df %>% arrange(as.Date(dt))
df %>% arrange(as.Date(dt)) %>% mutate(diff.date=date_diff(dt, lag(dt)))
df %>% arrange(as.Date(dt, format=DATE_FORMAT)) %>% mutate(diff.date=date_diff(dt, lag(dt)))
df %>% arrange(as.Date(dt, format=DATE_FORMAT)) %>% mutate(diff.date=date_diff(dt, lag(dt)), diff.date.avg=round(mean(diff.date), digits=2))
df %>% arrange(as.Date(dt, format=DATE_FORMAT)) %>% mutate(diff.date=date_diff(dt, lag(dt))) %>% mutate(diff.date.avg=round(mean(diff.date), digits=2))
df %>% arrange(as.Date(dt, format=DATE_FORMAT)) %>% mutate(diff.date=date_diff(dt, lag(dt))) %>% mutate(diff.date.avg=round(mean(diff.date), digits=2, na.rm=T))
?mean
df %>% arrange(as.Date(dt, format=DATE_FORMAT)) %>% mutate(diff.date=date_diff(dt, lag(dt))) %>% mutate(diff.date.avg=round(mean(diff.date, na.rm=T), digits=2))
df %>% arrange(as.Date(dt, format=DATE_FORMAT)) %>% mutate(diff.date=date_diff(dt, lag(dt))) %>% summarize(diff.date.avg=round(mean(diff.date, na.rm=T), digits=2))
patterns$V1
Reduce('|', lapply(patterns$V1, grepl, "netflixsubscription"))
any(lapply(patterns$V1, grepl, "netflixsubscription")))
?any
any(lapply(patterns$V1, grepl, trans.desc))
any(lapply(patterns$V1, grepl, "netflixsubscription"))
any(unlist(lapply(patterns$V1, grepl, "netflixsubscription")))
any(unlist(lapply(patterns$V1, grepl, "randomsubscription")))
source('app_util_new.R')
trans     <- read.csv('subset.csv', head=TRUE, sep='|', colClasses = c(UNIQUE.MEM.ID='character', UNIQUE.TRANSACTION.ID='character'), stringsAsFactors=F)
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
View(data.sim_df)
source('app_util_new.R')
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
View(data.sim_df)
source('app_util_new.R')
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
source('app_util_new.R')
source('app_util_new.R')
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
source('app_util_new.R')
source('app_util_new.R')
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
source('app_util_new.R')
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
source('app_util_new.R')
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
source('app_util_new.R')
trans     <- read.csv('Top-100-Users-Trans-v4.csv', head=TRUE, sep='|', colClasses = c(UNIQUE.MEM.ID='character', UNIQUE.TRANSACTION.ID='character'), stringsAsFactors=F)
data.sim_df <- trans %>% group_by(UNIQUE.MEM.ID) %>% do(find_similar(.))
head(data.sim_df)
process_write(data.sim_df[, -1], 'trans_features_full.csv')
?vlaidate
?validate
?read.csv
data  <- read.csv('trans_features_53K.csv', header=F,
col.names=c('mem', 'transaction_id', 'similar_transactions', 'desc',
'date_diff', 'date_var', 'amt', 'cat', 'discret', 'sub', 'label'),
stringsAsFactors=F)
summary(data)
nrow(data['label'==0,])
nrow(data['label'==1,])
nrow(data[data$label==1,])
nrow(data[data$label==0,])
data <- data[, c(-2, -3)]
data <- data[data$label==0, 'label'] <- 'Invalid'
data <- data[data$label==1, 'label'] <- 'Valid'
data  <- read.csv('trans_features_53K.csv', header=F,
col.names=c('mem', 'transaction_id', 'similar_transactions', 'desc',
'date_diff', 'date_var', 'amt', 'cat', 'discret', 'sub', 'label'),
stringsAsFactors=F)
data <- data[, c(-2, -3)]
data$label <- as.character(data$label)
data[is.na(data)]   <- -1
m <- PART(label ~ date_diff+date_var+amt+cat+discret+sub, data=data)
source('app_util_new.R')
library(rpart)
library(RWeka)
library(dplyr)
library(plyr)
m <- PART(label ~ date_diff+date_var+amt+cat+discret+sub, data=data)
data  <- read.csv('trans_features_53K.csv', header=F,
col.names=c('mem', 'transaction_id', 'similar_transactions', 'desc',
'date_diff', 'date_var', 'amt', 'cat', 'discret', 'sub', 'label'))
data       <- data[, c(-2, -3)]
data$label <- as.character(data$label)
data[is.na(data)]   <- -1
m <- PART(label ~ date_diff+date_var+amt+cat+discret+sub, data=data)
?as.logical
t <- c(0, 1)
as.logical(t)
data$label <- as.logical(data$label)
data  <- read.csv('trans_features_53K.csv', header=F,
col.names=c('mem', 'transaction_id', 'similar_transactions', 'desc',
'date_diff', 'date_var', 'amt', 'cat', 'discret', 'sub', 'label'))
data       <- data[, c(-2, -3)]
data$label <- as.logical(data$label)
data[is.na(data)]   <- -1
m <- PART(label ~ date_diff+date_var+amt+cat+discret+sub, data=data)
m
?sample
data  <- read.csv('trans_features_full-train-1-of-3.csv', header=F,
col.names=c('mem', 'transaction_id', 'similar_transactions', 'desc',
'date_diff', 'date_var', 'amt', 'cat', 'discret', 'sub', 'label'))
data$label <- as.logical(data$label)
data[is.na(data)]   <- -1
data  <- read.csv('trans_features_full-train-1-of-3.csv', header=F,
col.names=c('mem', 'transaction_id', 'similar_transactions', 'desc',
'date_diff', 'date_var', 'amt', 'cat', 'discret', 'sub', 'label'))
data$label <- as.logical(data$label)
?read.csv
data  <- read.csv('trans_features_full-train-1-of-3.csv', header=F,
col.names=c('mem', 'transaction_id', 'similar_transactions', 'desc',
'date_diff', 'date_var', 'amt', 'cat', 'discret', 'sub', 'label'),
colClasses=c(rep('character',4), rep('numeric',3), 'character', rep('logical',3)))
data  <- read.csv('trans_features_full-train-1-of-3.csv', header=F,
col.names=c('mem', 'transaction_id', 'similar_transactions', 'desc',
'date_diff', 'date_var', 'amt', 'cat', 'discret', 'sub', 'label')
#colClasses=c(rep('character',4), rep('numeric',3), 'character', rep('logical',3))
)
data$label
data  <- read.csv('trans_features_full-train-1-of-3.csv', header=T,
col.names=c('mem', 'transaction_id', 'similar_transactions', 'desc',
'date_diff', 'date_var', 'amt', 'cat', 'discret', 'sub', 'label')
#colClasses=c(rep('character',4), rep('numeric',3), 'character', rep('logical',3))
)
data$label <- as.logical(data$label)
data[is.na(data)]   <- -1
m <- PART(label ~ date_diff+date_var+amt+cat+discret+sub, data=data)
library(RWeka)
m <- PART(label ~ date_diff+date_var+amt+cat+discret+sub, data=data)
print(m)
pred <- trans_predict(m, data.test)
data.test  <- read.csv('trans_features_full-test-1-of-3.csv', header=T,
col.names=c('mem', 'transaction_id', 'similar_transactions', 'desc',
'date_diff', 'date_var', 'amt', 'cat', 'discret', 'sub', 'label')
#colClasses=c(rep('character',4), rep('numeric',3), 'character', rep('logical',3))
)
pred <- trans_predict(m, data.test)
data.test$label <- as.logical(data.test$label)
pred <- trans_predict(m, data.test)
source('app_util_new.R')
pred <- trans_predict(m, data.test)
m
data  <- read.csv('trans_features_full-train-1-of-3.csv', header=T,
col.names=c('mem', 'transaction_id', 'similar_transactions', 'desc',
'date_diff', 'date_var', 'amt', 'cat', 'discret', 'sub', 'label')
#colClasses=c(rep('character',4), rep('numeric',3), 'character', rep('logical',3))
)
data$label <- as.character(data$label)
data[is.na(data)]   <- -1
m <- PART(label ~ date_diff+date_var+amt+cat+discret+sub, data=data)
data$label <- as.factor(data$label)
data[is.na(data)]   <- -1
m <- PART(label ~ date_diff+date_var+amt+cat+discret+sub, data=data)
print(m)
data.test  <- read.csv('trans_features_full-test-1-of-3.csv', header=T,
col.names=c('mem', 'transaction_id', 'similar_transactions', 'desc',
'date_diff', 'date_var', 'amt', 'cat', 'discret', 'sub', 'label')
#colClasses=c(rep('character',4), rep('numeric',3), 'character', rep('logical',3))
)
data.test$label <- as.factor(data.test$label)
source('app_util_new.R')
pred <- trans_predict(m, data.test)
View(pred)
data  <- read.csv('trans_features_full-train-1-of-3.csv', header=T
#                  ,col.names=c('mem', 'transaction_id', 'similar_transactions', 'desc',
#                              'date_diff', 'date_var', 'amt', 'cat', 'discret', 'sub', 'label')
#colClasses=c(rep('character',4), rep('numeric',3), 'character', rep('logical',3))
)
data$label <- as.factor(data$label)
data[is.na(data)]   <- -1
data  <- read.csv('trans_features_full-train-1-of-3.csv', header=T
#                  ,col.names=c('mem', 'transaction_id', 'similar_transactions', 'desc',
#                              'date_diff', 'date_var', 'amt', 'cat', 'discret', 'sub', 'label')
#colClasses=c(rep('character',4), rep('numeric',3), 'character', rep('logical',3))
)
data$label <- as.factor(data$label)
data[is.na(data)]   <- -1
m <- PART(label ~ date_diff+date_var+amt+cat+discret+sub, data=data)
source('app_util_new.R')
library(rpart)
library(RWeka)
m <- PART(label ~ date_diff+date_var+amt+cat+discret+sub, data=data)
print(m)
data.test  <- read.csv('trans_features_full-test-1-of-3.csv', header=T
#                 ,col.names=c('mem', 'transaction_id', 'similar_transactions', 'desc',
#                              'date_diff', 'date_var', 'amt', 'cat', 'discret', 'sub', 'label')
#colClasses=c(rep('character',4), rep('numeric',3), 'character', rep('logical',3))
)
data.test$label <- as.factor(data.test$label)
source('app_util_new.R')
pred <- trans_predict(m, data.test)
TP <- pred[(pred$label=='1') & (pred$pred=='1'), ]
TN <- pred[(pred$label=='0') & (pred$pred=='0'), ]
FP <- pred[(pred$label=='0') & (pred$pred=='1'), ]
FN <- pred[(pred$label=='1') & (pred$pred=='0'), ]
Recall <- nrow(TP) / (nrow(TP)+nrow(FN))
Precision <- nrow(TP) / (nrow(TP)+nrow(FP))
F1 <- 2 * Recall * Precision / (Recall + Precision)
nrow(TP)
nrow(FP)
nrow(FN)
nrow(TN)
head(FP)
data.test  <- read.csv('trans_features_full-test-1-of-3.csv', header=T
#                 ,col.names=c('mem', 'transaction_id', 'similar_transactions', 'desc',
#                              'date_diff', 'date_var', 'amt', 'cat', 'discret', 'sub', 'label')
#colClasses=c(rep('character',4), rep('numeric',3), 'character', rep('logical',3))
)
data.test$label <- as.factor(data.test$label)
data.test[is.na(date.test)] <- -1
data.test  <- read.csv('trans_features_full-test-1-of-3.csv', header=T
#                 ,col.names=c('mem', 'transaction_id', 'similar_transactions', 'desc',
#                              'date_diff', 'date_var', 'amt', 'cat', 'discret', 'sub', 'label')
#colClasses=c(rep('character',4), rep('numeric',3), 'character', rep('logical',3))
)
data.test$label <- as.factor(data.test$label)
data.test[is.na(data.test)] <- -1
pred <- trans_predict(m, data.test)
TP <- pred[(pred$label=='1') & (pred$pred=='1'), ]
TN <- pred[(pred$label=='0') & (pred$pred=='0'), ]
FP <- pred[(pred$label=='0') & (pred$pred=='1'), ]
FN <- pred[(pred$label=='1') & (pred$pred=='0'), ]
Recall <- nrow(TP) / (nrow(TP)+nrow(FN))
Precision <- nrow(TP) / (nrow(TP)+nrow(FP))
F1 <- 2 * Recall * Precision / (Recall + Precision)
head(FP)
m
